<?xml version="1.0" encoding="utf-8"?>
<androidx.core.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@color/szary"
    tools:context=".Fragment5"
    tools:ignore="HardcodedText"
    android:id="@+id/scroll4">

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical">
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:textAlignment="center"
            android:textColor="@color/android"
            android:textSize="40sp"
            android:text="UI, Atrybuty"
            />
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="@color/android"
            android:textSize="20sp"
            android:layout_marginTop="40sp"
            android:textAlignment="center"
            android:text="Czego dowiesz się w tym rozdziale?">
        </TextView>
        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:clickable="true"
            android:focusable="true"
            android:textColor="@color/android"
            android:textSize="20sp"
            android:layout_gravity="center"
            android:layout_marginTop="40sp"
            android:layout_marginStart="10sp"
            android:padding="16dp"
            android:text="Plik Manifestu"
            android:id="@+id/F5R1"
            >
        </Button>
        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:clickable="true"
            android:focusable="true"
            android:textColor="@color/pomarancz"
            android:layout_gravity="center"
            android:textSize="20sp"
            android:layout_marginTop="20sp"
            android:layout_marginStart="10sp"
            android:padding="16dp"
            android:text="Pliki XML"
            android:id="@+id/F5R2">
        </Button>
        <Button
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:clickable="true"
            android:focusable="true"
            android:textColor="@color/niebieski"
            android:layout_gravity="center"
            android:textSize="20sp"
            android:layout_marginVertical="20sp"
            android:layout_marginStart="10sp"
            android:padding="16dp"
            android:text="Stylowanie UI"
            android:id="@+id/F5R3">
        </Button>

        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="@color/android"
            android:id="@+id/F5R1T"
            android:textSize="20sp"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="10dp"
            android:text="Rozdział 1"
            android:textAlignment="center"
            />
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R1T1"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Android Manifest jest plikiem, który opisuje atrybuty aplikacjji. Jest to bardzo ważne, ponieważ wyznacza on ramy dla całego projektu. \n \n Plik Manifestu znajduje się na samej górze drzewka projektu. Oto domyślny Manifest:"
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG48"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R1T2"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Wewnątrz komponentu manifest znajduje się komponent application. \n \n Wszystkie aktywności dodane za pomocą opcji w Android Studio automatycznie są uwzględniane w tym fragmencie. Jeśli jednak dodasz aktywność ręcznie, musisz też ręcznie dodać jej deklarację w tym fragmencie kodu. \n \n W sekcji manifestu umieszcze się także uprawnienia wymagane do obsługi aplikacji, np. dostęp do kontaktów, internetu, aparatu itp. \n \n Pełna lista permissions zostanie wyświetlona wraz z wpisywaniem komendy."
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R1T3"
            android:textSize="20sp"
            android:textColor="@color/android"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Oprócz tego, wyróżniamy: \n \n \u2023 android:icon - wybór ikony aplikacji \n \n \u2023 android:label - nazwa aplikacji \n \n \u2023 android:theme wybór skórki aplikacji \n \n \u2023 activity - wybór wszystkich aktywności \n \n \u2023 intent-filter - Określają, w jaki sposób elementy takie jak activity reagują na zdarzenia lub interakcje z użytkownikiem \n \n \u2023 uses-feature - określa konieczne funkcje sprzętowe, takie jak GPS, żyroskop, aparat itp"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="@color/pomarancz"
            android:textSize="20sp"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="10dp"
            android:id="@+id/F5R2T"
            android:text="Rozdział 2"
            android:textAlignment="center"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R2T1"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="W tym rozdziale pokażemy Ci, jakie atrybuty można ustawić podstawowym elementom w plikach XML, aby zmienić ich wygląd, czy zachowanie."
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R2T2"
            android:textSize="20sp"
            android:textColor="@color/pomarancz"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="layout_width, layout_heigth"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R2T3"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Ustawiając te atrybuty dla dowolnego elementu definiujemy jego szerokość i wysokość, może to być: \n \n \u2023 match_parent - maksymalne wypełnienie pola rodzica \n \n \u2023 wrap_content - dopasowanie się do rozmiaru zawartości \n \n \u2023 20dp - ustawienie \u0022na sztywno\u0022 odległości w pikselach"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R2T4"
            android:textSize="20sp"
            android:textColor="@color/pomarancz"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="TEXT"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R2T5"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Możemy ustawić mu następujące atrybuty: \n \n \u2023 text - umieszczenie tekstu w przycisku/textView \n \n \u2023 textColor - ustalenie koloru elementu \n \n \u2023 textSize - rozmiar czcionki \n \n \u2023 textStyle - styl czcionki \n \n \u2023 gravity - wyrównanie tekstu(np. left,right,center) \n \n \u2023 padding - ustawia wcięcie"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R2T8"
            android:textSize="20sp"
            android:textColor="@color/pomarancz"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="MARGIN"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R2T9"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="\u2023 margin - ustawia margines wszystkich krawędzi \n \n \u2023 marginTop - margines górny \n \n \u2023 marginBottom - margines dolny \n \n \u2023 marginStart, marginEnd - margines lewy i prawy \n \n \n Marginesy ustawiamy podając ich szerokość w dp(pikselach) "
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R2T6"
            android:textSize="20sp"
            android:textColor="@color/pomarancz"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="INNE"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R2T7"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Pozostałe atrybuty warte uwagi to: \n \n \u2023 clickable(true) - umożliwienie kliknięcia jakiegoś elementu np. tekstu \n \n \u2023 background - ustawienie tła danego elementu \n \n \u2023 hint - ustawienie tekstu placeholdera, czyli tekstu który wyświetla się w polu edytowalnym przed wpisaniem tekstu \n \n \u2023 src - ustalenie źródłą obrazu \n \n \u2023 scaleType - skalowanie obrazu(centerCrop,centerInParent) \n \n \u2023 layout_margin - ustawienie marginesu np. przycisku"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:textColor="@color/niebieski"
            android:textSize="20sp"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="20dp"
            android:id="@+id/F5R3T"
            android:text="Rozdział 3"
            android:textAlignment="center"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T1"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="W tym rozdziale skupimy się na stylowaniu interfejsu użytkownika. Wyróżniamy dwa różne pojęcia:"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T2"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="MOTYW"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T3"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Motyw w aplikacji Android to zestaw atrybutów, które można zastosować do całego interfejsu użytkownika, aktywności lub hierarchii widoków. \n \n Po zastosowaniu motywu, wszystkie widoki w aplikacji biorą pod uwagę wszystkie atrybuty motywu, które są w nim zdefiniowane. Oprócz tego, motywy mogą także wpływać na style elementów, które nie są widokami, na przykład pasek stanu czy tło okna.\n \n Innymi słowy, motyw to zbiór określonych parametrów, które można później wykorzystać w stylach, layoutach i innych częściach aplikacji, aby jednolitej nadać wygląd i właściwości w całym projekcie."
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T4"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="STYL"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T5"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Styl w Androidzie to zestaw cech, które definiują wygląd i właściwości pojedynczego widoku. \n \n Może on określać różne parametry, takie jak kolor tekstu, rozmiar czcionki, tło i wiele innych właściwości, które mają wpływ na wygląd danego elementu interfejsu użytkownika."
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T6"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Ustawianie motywu"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T7"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="W pliku themes.xml w Androidzie możliwe jest dostosowanie atrybutów kolorów oraz innych cech dla różnych trybów wyświetlania, takich jak tryb dzienny i nocny. Te pliki tematów pozwalają na zmianę właściwości każdego elementu w aplikacji. \n \n Na przykład, można zdefiniować podstawowe i dodatkowe kolory, ustawić domyślną czcionkę dla tekstu lub zmienić domyślny kolor tła przycisków. Są to miejsca, w których można dokonywać globalnych zmian wyglądu i właściwości różnych komponentów w aplikacji."
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG49"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T8"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Domyślny motyw ustawiony jest w pliku Manifestu.\n \n Po najechaniu na niego myszą otworzy się okno podglądu ustawionych atrybutów"
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG50"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T9"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Ustawianie stylu"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T10"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Style w Androidzie mają szerokie zastosowanie, gdyż mogą wpływać zarówno na całe układy interfejsu użytkownika, jak i na wybrane komponenty wewnątrz nich. \n \n Można stworzyć własne pliki XML w katalogu themes definiujące indywidualne style aplikacji. Można również wykorzystać gotowe motywy, takie jak te dostępne w bibliotekach Material3 lub MaterialComponents, które zapewniają z góry zdefiniowane zestawy atrybutów, ułatwiające jednolity wygląd aplikacji. \n \n W ten sposób można precyzyjnie kontrolować wygląd i zachowanie elementów interfejsu użytkownika w Androidzie."
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG51"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T11"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Atrybuty komponentów w Androidzie można dostosowywać i modyfikować według potrzeb, jednakże istnieje hierarchia nadpisywania.\n \n  Własności tematów/motywów są początkowo zastosowane dla całej aplikacji, następnie mogą zostać nadpisane przez style, a ostatecznie mogą być nadpisywane przez atrybuty określonych komponentów. \n \n Innymi słowy, atrybuty poszczególnych komponentów mają najwyższy priorytet w modyfikowaniu wyglądu i zachowania tych elementów, ale mogą być zmieniane i kontrolowane w zależności od zastosowanych tematów, motywów oraz stylów w aplikacji."
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T12"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Jak stworzyć swój własny styl?"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T13"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="W pierwszej kolejnościm należy stworzyć w folderze Values swój plik styles.xml \n \n W tym celu ależy dodać nowy Values Resource File \n \n W dalszej kolejności możemy wzorować się na stylach z MaterialComponents, themes.xml, lub stworzyć własny styl od podstaw."
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T14"
            android:textSize="20sp"
            android:textColor="@color/czerwony"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Jeśli stylizujesz swoją aplikację, a rezultaty są niewidoczne, to najprawdopodobniej inne style nadpisują Twoje zmiany zmiany."
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T15"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Material Componments"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T16"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Material Components są zestawem interaktywnych elementów służących do budowania interfejsu użytkownika w aplikacjach Android. \n \n Charakteryzują się wbudowanymi funkcjami, takimi jak sposób sygnalizowania fokusu na elemencie oraz informowanie o wyborze użytkownika. \n \n Podczas pracy z aplikacjami można korzystać z dodatkowej biblioteki o nazwie Material Components for Android, która zapewnia gotowe narzędzia do implementacji tych interaktywnych bloczków w projektach."
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T17"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Motyw DayNight"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T18"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Motyw DayNight pozwala na automatyczne przełączanie się na ciemny motyw, gdy urządzenie jest w trybie nocnym.\n \n  Aby stworzyć niestandardowy motyw dla tego trybu, należy utworzyć plik themes.xml w folderze values-night i zdefiniować odpowiednie właściwości według preferencji."
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG52"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T19"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Możemy również ustalać motywy ciemny i jasny dzięki dziedziczeniu:"
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG53"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T20"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Gdzie Theme.MaterialComponents to ciemny, statyczny motyw, a .DayNight to motyw umożliwiający przełączanie między trybem dziennym, a nocnym."
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T21"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Do tej pory w celu wprowadzania tekstu do aplikacji korzystaliśmy z komponentu EditText. \n \n Obecnie, zalecanym jest korzystanie z pól tekstowych biblioteki Material Design. \n \n Składa się ono z TexInputLayout, oraz zagnieżdżonym wewnątrz TextInputEditText."
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG54"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T22"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="1.Kontener \n \n2.Ikona wiodąca \n \n3.Etykieta \n \n4.Wprowadzony tekst \n \n5.Ikona końcowa \n \n6.Wskaźnik aktywacji \n \n7.Tekst błędu  "
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T23"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Wymienione powyżej elementy mają określone atrybuty. \n \n  Definiujemy je w TextInputLayout, natomiast atrybuty tekstu w TextInputEditText."
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="500dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG55"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T24"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Rotacja ekranu"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T25"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Gdy użytkownik obróci urządzenie, część contentu może nie być widoczna. \n \n W takiej sytuacji możemy skorzystaćze ScrollView. Layout ten umożliwia przewijanie. \n \n Istnieje również HorizontalScrollView, któe umożliwia przewijanie na boki."
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T26"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Ukrywanie klawiatury"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T27"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Jeśli chcemy, aby po zakończeniu wprowadzania tekstu i kliknięciu ENTER klawiatura użytkownika zniknęła, należy: \n \n \u2023 Użyć funkcji handleKeyEvent() - ukrywa ona klawiature, jeśli kod przycisku to KEYCODE_ENTER \n \n Skorzystać z przykładowej funkcji poniżej:"
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="500dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG56"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T28"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Dodawanie ikon"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T29"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Wygodnym narzędziem, które może ożywić naszą aplikację jest konfigurowanie grafik wektorowych. \n \n Aby dodać nową grafikę, należy kliknąć prawym przyciskiem myszy na folder drawable, wybrać NEW, oraz Vector Asset."
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG57"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T30"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="W oknie tym możemy: \n \n \u2023 wybrać nazwę \n \n \u2023 wybrać grafikę z dostępnej listy klikając w ikonę clip art \n \n \u2023 ustalić rozmiar grafiki \n \n \u2023 ustawić kolor grafiki \n \n \u2023 ustawić przejrzystość grafiki \n \n Po wybraniu parametrów wystarczy kliknąć OK, a następnie FINISH. \n \n Ikona będzie dostępna w folderze drawable pod ID, które ustawiliśmy."
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T31"
            android:textSize="20sp"
            android:textColor="@color/niebieski"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Ikona aplikacji"
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T32"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Jest to istotny element wizualny, ponieważ to ją widzi użytkownik jako pierwszą. \n \n Istotne jest więc zaprojektowanie ikony w taki sposób, aby należycie obrazowała naszą aplikację. \n \n Powinna być ona również czytelna i wyraźna niezależnie od urządzenia. \n \n \n Aby stworzyć własną ikonę, należy: \n \n \u2023 W drzewie projektu dodać NEW, Image asset"
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG58"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T33"
            android:textSize="20sp"
            android:textColor="@color/android"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Aby ustawić własną ikonę, należy wybrać ścieżkę do pliku w zakładce Path \n \n Gdy tego dokonamy, nasza grafika zostanie wyświetlona \n \n "
            android:textAlignment="center">
        </TextView>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T34"
            android:textSize="20sp"
            android:textColor="@color/android"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Teraz należy odpowiednio przeskalować obraz przy pomocy suwaka Resize(Trim:Tes) \n \n Należy zaznaczyć opcję Show safe zone, oraz odpowiednio zmniejszyć lub zwiększyć nasz obraz i dopasować go do niej. \n \n Następnie możemy przejść do zakładki Foreground Layer, oraz wybrać kolor lub grafikę naszego tła"
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG59"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T35"
            android:textSize="20sp"
            android:textColor="@color/pomarancz"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Po uzyskaniu zadowalającego efektu możemy przejść dalej, oraz zaakceptować nadpisanie plików klikając FINISH"
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG60"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
        <TextView
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:id="@+id/F5R3T36"
            android:textSize="20sp"
            android:textColor="@color/white"
            android:layout_marginHorizontal="10dp"
            android:layout_marginVertical="30dp"
            android:text="Ikona została zmieniona. Po zbudowaniu projektu, oraz uruchomieniu go, możemy zauważyć nową ikonę:"
            android:textAlignment="center">
        </TextView>
        <com.github.chrisbanes.photoview.PhotoView
            android:layout_width="match_parent"
            android:layout_height="300dp"
            android:backgroundTint="@color/szary_pom"
            android:id="@+id/IMG61"
            android:layout_marginVertical="20dp"
            android:src="@drawable/baseline_android_24"
            android:scaleType="fitCenter"/>
    </LinearLayout>



</androidx.core.widget.NestedScrollView>